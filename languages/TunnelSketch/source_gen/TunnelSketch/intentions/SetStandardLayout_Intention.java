package TunnelSketch.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.AbstractIntentionDescriptor;
import jetbrains.mps.openapi.intentions.IntentionFactory;
import java.util.Collection;
import jetbrains.mps.openapi.intentions.IntentionExecutable;
import jetbrains.mps.openapi.intentions.Kind;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SEnumOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import java.util.Collections;
import jetbrains.mps.intentions.AbstractIntentionExecutable;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.openapi.intentions.IntentionDescriptor;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SConcept;

public final class SetStandardLayout_Intention extends AbstractIntentionDescriptor implements IntentionFactory {
  private Collection<IntentionExecutable> myCachedExecutable;
  public SetStandardLayout_Intention() {
    super(Kind.NORMAL, false, new SNodePointer("r:aeecc9ff-280a-4b40-8b5c-ea5d4216840b(TunnelSketch.intentions)", "7640032606618537842"));
  }
  @Override
  public String getPresentation() {
    return "SetStandardLayout";
  }
  @Override
  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }
  private boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    return !(SEnumOperations.isMember(SPropertyOperations.getEnum(node, PROPS.type$MG92), 0x69804428d8724461L));
  }
  @Override
  public boolean isSurroundWith() {
    return false;
  }
  public Collection<IntentionExecutable> instances(final SNode node, final EditorContext context) {
    if (myCachedExecutable == null) {
      myCachedExecutable = Collections.<IntentionExecutable>singletonList(new IntentionImplementation());
    }
    return myCachedExecutable;
  }
  /*package*/ final class IntentionImplementation extends AbstractIntentionExecutable {
    public IntentionImplementation() {
    }
    @Override
    public String getDescription(final SNode node, final EditorContext editorContext) {
      return "Set Standard Layout";
    }
    @Override
    public void execute(final SNode node, final EditorContext editorContext) {
      SPropertyOperations.assignEnum(node, PROPS.type$MG92, SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0xa181095ee04c42f1L, 0x9ea7b771b750f4d2L, 0x69804428d8724460L, "TunnelSketch.structure.TunnelLayouts"), 0x69804428d8724461L, "StandardLayout"));
      SNodeOperations.replaceWithNewChild(SLinkOperations.getTarget(node, LINKS.layout$5AgU), CONCEPTS.TunnelLayout$tJ);
      SPropertyOperations.assign(SLinkOperations.getTarget(node, LINKS.layout$5AgU), PROPS.name$tAp1, "rera");
    }
    @Override
    public IntentionDescriptor getDescriptor() {
      return SetStandardLayout_Intention.this;
    }
  }

  private static final class PROPS {
    /*package*/ static final SProperty type$MG92 = MetaAdapterFactory.getProperty(0xa181095ee04c42f1L, 0x9ea7b771b750f4d2L, 0x69804428d86cddb5L, 0x69804428d8724465L, "type");
    /*package*/ static final SProperty name$tAp1 = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink layout$5AgU = MetaAdapterFactory.getContainmentLink(0xa181095ee04c42f1L, 0x9ea7b771b750f4d2L, 0x69804428d86cddb5L, 0x6a06d92d55e650e0L, "layout");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept TunnelLayout$tJ = MetaAdapterFactory.getConcept(0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x4799c809c7d0add2L, "TunnelProjection.structure.TunnelLayout");
  }
}
