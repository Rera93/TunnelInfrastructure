package TunnelProjection.editor;

/*Generated by MPS */

import de.itemis.mps.editor.diagram.runtime.shape.AbstractShape;
import java.awt.Graphics2D;
import java.awt.geom.Rectangle2D;
import de.itemis.mps.editor.diagram.runtime.shape.IShapeStyle;
import java.awt.Color;

public class TunnelShape extends AbstractShape {

  private int numberOfTunnelHoles;

  public TunnelShape(int numberOfTunnelHoles) {
    this.numberOfTunnelHoles = numberOfTunnelHoles;
  }



  @Override
  protected void drawShadow(final Graphics2D graphics, final Rectangle2D bounds, IShapeStyle style) {
  }

  @Override
  protected void draw(final Graphics2D graphics, final Rectangle2D bounds, IShapeStyle style) {
    graphics.setColor(Color.LIGHT_GRAY);
    graphics.fillRect((int) bounds.getMinX(), (int) bounds.getMinY(), (int) bounds.getWidth(), (int) bounds.getHeight());

    int leftPointX = (int) bounds.getMinX();
    int leftPointY = (int) (bounds.getMaxY() + ((bounds.getMinY() - bounds.getMaxY()) / 2));
    int rightPointX = (int) bounds.getMaxX();
    int rightPointY = leftPointY;

    int equalLanesDivision = 0;

    graphics.setColor(Color.MAGENTA);

    if (this.numberOfTunnelHoles == 0 || this.numberOfTunnelHoles == 1) {
      // do nothing 
    } else if (this.numberOfTunnelHoles == 2) {
      graphics.drawLine(leftPointX, leftPointY, rightPointX, rightPointY);
    } else {
      equalLanesDivision = ((int) bounds.getHeight()) / this.numberOfTunnelHoles;
      for (int i = 0; i < this.numberOfTunnelHoles - 1; i++) {
        graphics.drawLine(leftPointX, ((int) bounds.getMinY()) + equalLanesDivision * (i + 1), rightPointX, ((int) bounds.getMinY()) + equalLanesDivision * (i + 1));
      }

    }



  }

}
