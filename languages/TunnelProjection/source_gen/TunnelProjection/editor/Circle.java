package TunnelProjection.editor;

/*Generated by MPS */

import de.itemis.mps.editor.diagram.runtime.shape.AbstractShape;
import java.awt.Graphics2D;
import java.awt.geom.Rectangle2D;
import de.itemis.mps.editor.diagram.runtime.shape.IShapeStyle;
import java.awt.Color;

public class Circle extends AbstractShape {

  private boolean entryPoint;

  public Circle(boolean entryPoint) {
    this.entryPoint = entryPoint;
  }



  @Override
  protected void drawShadow(final Graphics2D graphics, final Rectangle2D bounds, IShapeStyle style) {
  }

  @Override
  protected void draw(final Graphics2D graphics, final Rectangle2D bounds, IShapeStyle style) {


    int minX = (int) bounds.getMinX();
    int maxX = (int) bounds.getMaxX();
    int minY = (int) bounds.getMinY();
    int maxY = (int) bounds.getMaxY();

    int width = maxX - minX;
    int height = maxY - minY;

    style.configureBorder(bounds);
    style.configureShadow(bounds);
    style.configureFill(bounds);

    graphics.setColor(Color.BLACK);
    if (this.entryPoint == true) {
      graphics.drawOval((int) bounds.getCenterX() - width / 2, (int) bounds.getCenterY() - height / 2, width, height);
    } else {
      graphics.fillOval((int) bounds.getCenterX() - width / 2, (int) bounds.getCenterY() - height / 2, width, height);
    }

  }

}
