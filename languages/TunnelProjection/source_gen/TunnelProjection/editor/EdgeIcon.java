package TunnelProjection.editor;

/*Generated by MPS */

import de.itemis.mps.editor.diagram.runtime.shape.AbstractShape;
import org.jetbrains.mps.openapi.language.SEnumerationLiteral;
import java.awt.Graphics2D;
import java.awt.geom.Rectangle2D;
import de.itemis.mps.editor.diagram.runtime.shape.IShapeStyle;
import java.awt.Color;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SEnumOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class EdgeIcon extends AbstractShape {

  private SEnumerationLiteral connection;

  public EdgeIcon(SEnumerationLiteral connection) {
    this.connection = connection;
  }



  @Override
  protected void drawShadow(final Graphics2D graphics, final Rectangle2D bounds, IShapeStyle style) {
  }

  @Override
  protected void draw(final Graphics2D graphics, final Rectangle2D bounds, IShapeStyle style) {
    String symbol = null;
    Color symbolColor = null;

    if (this.connection.equals(SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x3a88284cfa2a2f2dL, "TunnelProjection.structure.ConnectionType"), 0x3a88284cfa2a2f2eL, "LeftPointToTunnelRoad"))) {
      symbol = "T";
      symbolColor = Color.BLACK;
    } else if (this.connection.equals(SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x3a88284cfa2a2f2dL, "TunnelProjection.structure.ConnectionType"), 0x3a88284cfa2a2f3bL, "RightPointToRoad"))) {
      symbol = "R";
      symbolColor = Color.ORANGE;
    } else if (this.connection.equals(SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x3a88284cfa2a2f2dL, "TunnelProjection.structure.ConnectionType"), 0x3a88284cfa2a2f36L, "RoadToLeftPoint"))) {
      symbol = "P";
      symbolColor = Color.MAGENTA;
    } else if (this.connection.equals(SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x3a88284cfa2a2f2dL, "TunnelProjection.structure.ConnectionType"), 0x3a88284cfa2a2f32L, "RoadToRoad")) || this.connection.equals(SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x3a88284cfa2a2f2dL, "TunnelProjection.structure.ConnectionType"), 0x1181c13235f24120L, "TunnelRoadToTunnelRoad"))) {
      symbol = "R";
      symbolColor = Color.ORANGE;
    } else if (this.connection.equals(SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x3a88284cfa2a2f2dL, "TunnelProjection.structure.ConnectionType"), 0x3a88284cfa2a2f2fL, "TunnelRoadToRightPoint"))) {
      symbol = "P";
      symbolColor = Color.MAGENTA;
    }

    graphics.setColor(symbolColor);
    graphics.drawString(symbol, (int) (bounds.getMinX() + bounds.getMaxX()) / 2 - ((int) bounds.getWidth() / 4), (int) (bounds.getMaxY() + bounds.getMinY()) / 2 + (((int) bounds.getHeight()) / 4));
  }

}
