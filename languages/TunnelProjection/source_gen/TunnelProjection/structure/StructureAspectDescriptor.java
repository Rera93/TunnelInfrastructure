package TunnelProjection.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptCurvyRoad = createDescriptorForCurvyRoad();
  /*package*/ final ConceptDescriptor myConceptLayout = createDescriptorForLayout();
  /*package*/ final ConceptDescriptor myConceptLeftTunnelPoint = createDescriptorForLeftTunnelPoint();
  /*package*/ final ConceptDescriptor myConceptRightTunnelPoint = createDescriptorForRightTunnelPoint();
  /*package*/ final ConceptDescriptor myConceptStraightRoad = createDescriptorForStraightRoad();
  /*package*/ final ConceptDescriptor myConceptStraightRoadRef = createDescriptorForStraightRoadRef();
  /*package*/ final ConceptDescriptor myConceptTunelConnection = createDescriptorForTunelConnection();
  /*package*/ final ConceptDescriptor myConceptTunnel = createDescriptorForTunnel();
  /*package*/ final ConceptDescriptor myConceptTunnelReference = createDescriptorForTunnelReference();
  /*package*/ final EnumerationDescriptor myEnumerationRoadType = new EnumerationDescriptor_RoadType();
  /*package*/ final EnumerationDescriptor myEnumerationTunnelPointType = new EnumerationDescriptor_TunnelPointType();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCurvyRoad, myConceptLayout, myConceptLeftTunnelPoint, myConceptRightTunnelPoint, myConceptStraightRoad, myConceptStraightRoadRef, myConceptTunelConnection, myConceptTunnel, myConceptTunnelReference);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.CurvyRoad:
        return myConceptCurvyRoad;
      case LanguageConceptSwitch.Layout:
        return myConceptLayout;
      case LanguageConceptSwitch.LeftTunnelPoint:
        return myConceptLeftTunnelPoint;
      case LanguageConceptSwitch.RightTunnelPoint:
        return myConceptRightTunnelPoint;
      case LanguageConceptSwitch.StraightRoad:
        return myConceptStraightRoad;
      case LanguageConceptSwitch.StraightRoadRef:
        return myConceptStraightRoadRef;
      case LanguageConceptSwitch.TunelConnection:
        return myConceptTunelConnection;
      case LanguageConceptSwitch.Tunnel:
        return myConceptTunnel;
      case LanguageConceptSwitch.TunnelReference:
        return myConceptTunnelReference;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationRoadType, myEnumerationTunnelPointType);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForCurvyRoad() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TunnelProjection", "CurvyRoad", 0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x1269a468049550ceL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:6e36a64b-b1ea-431d-940e-d48e4716b989(TunnelProjection.structure)/1326772331897770190");
    b.version(2);
    b.property("type", 0x1269a468049550d1L).type(MetaIdFactory.dataTypeId(0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x1269a468049550c0L)).origin("1326772331897770193").done();
    b.property("angle", 0x1269a468049550d7L).type(PrimitiveTypeId.INTEGER).origin("1326772331897770199").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLayout() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TunnelProjection", "Layout", 0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x4799c809c7d0add2L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:6e36a64b-b1ea-431d-940e-d48e4716b989(TunnelProjection.structure)/5159374792462216658");
    b.version(2);
    b.aggregate("tunnels", 0x1269a46804c41f1aL).target(0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x1269a46804bfb761L).optional(true).ordered(true).multiple(true).origin("1326772331900837658").done();
    b.aggregate("straightRoads", 0x1269a4680495503bL).target(0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x1269a46804955038L).optional(true).ordered(true).multiple(true).origin("1326772331897770043").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLeftTunnelPoint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TunnelProjection", "LeftTunnelPoint", 0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x1269a46804bfb75aL);
    b.class_(false, false, false);
    b.origin("r:6e36a64b-b1ea-431d-940e-d48e4716b989(TunnelProjection.structure)/1326772331900548954");
    b.version(2);
    b.property("x", 0x1269a46804bfb766L).type(PrimitiveTypeId.INTEGER).origin("1326772331900548966").done();
    b.property("y", 0x1269a46804bfb76cL).type(PrimitiveTypeId.INTEGER).origin("1326772331900548972").done();
    b.property("entryPoint", 0x1269a46804bfb92eL).type(PrimitiveTypeId.BOOLEAN).origin("1326772331900549422").done();
    b.aggregate("roadConnection", 0x1269a46804bfb777L).target(0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x1269a46804c1fb06L).optional(false).ordered(true).multiple(false).origin("1326772331900548983").done();
    b.aggregate("leftConnect", 0x1269a46804cd859fL).target(0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x1269a46804cd85a3L).optional(false).ordered(true).multiple(false).origin("1326772331901453727").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRightTunnelPoint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TunnelProjection", "RightTunnelPoint", 0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x1269a46804bfb76fL);
    b.class_(false, false, false);
    b.origin("r:6e36a64b-b1ea-431d-940e-d48e4716b989(TunnelProjection.structure)/1326772331900548975");
    b.version(2);
    b.property("x", 0x1269a46804bfb920L).type(PrimitiveTypeId.INTEGER).origin("1326772331900549408").done();
    b.property("y", 0x1269a46804bfb922L).type(PrimitiveTypeId.INTEGER).origin("1326772331900549410").done();
    b.property("entryPoint", 0x1269a46804bfb925L).type(PrimitiveTypeId.BOOLEAN).origin("1326772331900549413").done();
    b.associate("roadConnect", 0x1269a46804bfb770L).target(0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x1269a46804955038L).optional(true).origin("1326772331900548976").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStraightRoad() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TunnelProjection", "StraightRoad", 0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x1269a46804955038L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:6e36a64b-b1ea-431d-940e-d48e4716b989(TunnelProjection.structure)/1326772331897770040");
    b.version(2);
    b.property("type", 0x1269a468049550bdL).type(MetaIdFactory.dataTypeId(0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x1269a468049550c0L)).origin("1326772331897770173").done();
    b.property("length", 0x1269a46804959a80L).type(PrimitiveTypeId.INTEGER).origin("1326772331897789056").done();
    b.property("startX", 0x1269a46804bfb9e6L).type(PrimitiveTypeId.INTEGER).origin("1326772331900549606").done();
    b.property("startY", 0x1269a46804bfba07L).type(PrimitiveTypeId.INTEGER).origin("1326772331900549639").done();
    b.property("endX", 0x1269a46804bfba0cL).type(PrimitiveTypeId.INTEGER).origin("1326772331900549644").done();
    b.property("endY", 0x1269a46804bfba12L).type(PrimitiveTypeId.INTEGER).origin("1326772331900549650").done();
    b.associate("connect", 0x1269a46804bfb75fL).target(0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x1269a46804bfb75aL).optional(false).origin("1326772331900548959").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStraightRoadRef() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TunnelProjection", "StraightRoadRef", 0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x1269a46804c1fb06L);
    b.class_(false, false, false);
    b.origin("r:6e36a64b-b1ea-431d-940e-d48e4716b989(TunnelProjection.structure)/1326772331900697350");
    b.version(2);
    b.associate("roadRef", 0x1269a46804c1fb07L).target(0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x1269a46804955038L).optional(false).origin("1326772331900697351").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTunelConnection() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TunnelProjection", "TunelConnection", 0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x1269a46804c14804L);
    b.class_(false, false, false);
    b.origin("r:6e36a64b-b1ea-431d-940e-d48e4716b989(TunnelProjection.structure)/1326772331900651524");
    b.version(2);
    b.aggregate("leftPoint", 0x1269a46804c1480cL).target(0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x1269a46804bfb75aL).optional(false).ordered(true).multiple(false).origin("1326772331900651532").done();
    b.aggregate("rightPoint", 0x1269a46804c1480aL).target(0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x1269a46804bfb76fL).optional(false).ordered(true).multiple(false).origin("1326772331900651530").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTunnel() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TunnelProjection", "Tunnel", 0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x1269a46804bfb761L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:6e36a64b-b1ea-431d-940e-d48e4716b989(TunnelProjection.structure)/1326772331900548961");
    b.version(2);
    b.aggregate("tunnelConnection", 0x1269a46804c14805L).target(0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x1269a46804c14804L).optional(false).ordered(true).multiple(true).origin("1326772331900651525").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTunnelReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TunnelProjection", "TunnelReference", 0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x1269a46804cd85a3L);
    b.class_(false, false, false);
    b.origin("r:6e36a64b-b1ea-431d-940e-d48e4716b989(TunnelProjection.structure)/1326772331901453731");
    b.version(2);
    b.associate("leftConnect", 0x1269a46804cd85a4L).target(0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x1269a46804bfb761L).optional(false).origin("1326772331901453732").done();
    return b.create();
  }
}
