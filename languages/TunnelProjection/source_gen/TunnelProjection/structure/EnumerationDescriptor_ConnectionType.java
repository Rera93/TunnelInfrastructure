package TunnelProjection.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import java.util.List;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

public class EnumerationDescriptor_ConnectionType extends EnumerationDescriptorBase {

  public EnumerationDescriptor_ConnectionType() {
    super(0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x3a88284cfa2a2f2dL, "ConnectionType", "r:6e36a64b-b1ea-431d-940e-d48e4716b989(TunnelProjection.structure)/4217665362112163629");
  }

  private final EnumerationDescriptor.MemberDescriptor myMember_LeftPointToTunnelRoad_0 = new EnumerationDescriptor.MemberDescriptor("LeftPointToTunnelRoad", "LeftPointToTunnelRoad", 0x3a88284cfa2a2f2eL, "r:6e36a64b-b1ea-431d-940e-d48e4716b989(TunnelProjection.structure)/4217665362112163630");
  private final EnumerationDescriptor.MemberDescriptor myMember_TunnelRoadToRightPoint_0 = new EnumerationDescriptor.MemberDescriptor("TunnelRoadToRightPoint", "TunnelRoadToRightPoint", 0x3a88284cfa2a2f2fL, "r:6e36a64b-b1ea-431d-940e-d48e4716b989(TunnelProjection.structure)/4217665362112163631");
  private final EnumerationDescriptor.MemberDescriptor myMember_RoadToRoad_0 = new EnumerationDescriptor.MemberDescriptor("RoadToRoad", "RoadToRoad", 0x3a88284cfa2a2f32L, "r:6e36a64b-b1ea-431d-940e-d48e4716b989(TunnelProjection.structure)/4217665362112163634");
  private final EnumerationDescriptor.MemberDescriptor myMember_TunnelRoadToTunnelRoad_0 = new EnumerationDescriptor.MemberDescriptor("TunnelRoadToTunnelRoad", "TunnelRoadToTunnelRoad", 0x1181c13235f24120L, "r:6e36a64b-b1ea-431d-940e-d48e4716b989(TunnelProjection.structure)/1261501792038043936");
  private final EnumerationDescriptor.MemberDescriptor myMember_RoadToLeftPoint_0 = new EnumerationDescriptor.MemberDescriptor("RoadToLeftPoint", "RoadToLeftPoint", 0x3a88284cfa2a2f36L, "r:6e36a64b-b1ea-431d-940e-d48e4716b989(TunnelProjection.structure)/4217665362112163638");
  private final EnumerationDescriptor.MemberDescriptor myMember_RightPointToRoad_0 = new EnumerationDescriptor.MemberDescriptor("RightPointToRoad", "RightPointToRoad", 0x3a88284cfa2a2f3bL, "r:6e36a64b-b1ea-431d-940e-d48e4716b989(TunnelProjection.structure)/4217665362112163643");

  private final EnumerationLiteralsIndex myIndex = EnumerationLiteralsIndex.build(0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x3a88284cfa2a2f2dL, 0x3a88284cfa2a2f2eL, 0x3a88284cfa2a2f2fL, 0x3a88284cfa2a2f32L, 0x1181c13235f24120L, 0x3a88284cfa2a2f36L, 0x3a88284cfa2a2f3bL);
  private final List<EnumerationDescriptor.MemberDescriptor> myMembers = new EnumerationDescriptorBase.MembersList(myIndex, myMember_LeftPointToTunnelRoad_0, myMember_TunnelRoadToRightPoint_0, myMember_RoadToRoad_0, myMember_TunnelRoadToTunnelRoad_0, myMember_RoadToLeftPoint_0, myMember_RightPointToRoad_0);

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return null;
  }

  @NotNull
  @Override
  public List<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return myMembers;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String memberName) {
    if (memberName == null) {
      return null;
    }
    switch (memberName) {
      case "LeftPointToTunnelRoad":
        return myMember_LeftPointToTunnelRoad_0;
      case "TunnelRoadToRightPoint":
        return myMember_TunnelRoadToRightPoint_0;
      case "RoadToRoad":
        return myMember_RoadToRoad_0;
      case "TunnelRoadToTunnelRoad":
        return myMember_TunnelRoadToTunnelRoad_0;
      case "RoadToLeftPoint":
        return myMember_RoadToLeftPoint_0;
      case "RightPointToRoad":
        return myMember_RightPointToRoad_0;
    }
    return null;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(long idValue) {
    int index = myIndex.index(idValue);
    if (index == -1) {
      return null;
    }
    return myMembers.get(index);
  }
}
