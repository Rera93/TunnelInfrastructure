package TunnelProjection.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import java.util.List;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

public class EnumerationDescriptor_TunnelPointType extends EnumerationDescriptorBase {

  public EnumerationDescriptor_TunnelPointType() {
    super(0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x1269a46804bfb929L, "TunnelPointType", "r:6e36a64b-b1ea-431d-940e-d48e4716b989(TunnelProjection.structure)/1326772331900549417");
  }

  private final EnumerationDescriptor.MemberDescriptor myMember_Entry_0 = new EnumerationDescriptor.MemberDescriptor("Entry", "Entry", 0x1269a46804bfb92aL, "r:6e36a64b-b1ea-431d-940e-d48e4716b989(TunnelProjection.structure)/1326772331900549418");
  private final EnumerationDescriptor.MemberDescriptor myMember_Exit_0 = new EnumerationDescriptor.MemberDescriptor("Exit", "Exit", 0x1269a46804bfb92bL, "r:6e36a64b-b1ea-431d-940e-d48e4716b989(TunnelProjection.structure)/1326772331900549419");

  private final EnumerationLiteralsIndex myIndex = EnumerationLiteralsIndex.build(0x72c81d76425049a4L, 0x8dfa274e9e7a2b19L, 0x1269a46804bfb929L, 0x1269a46804bfb92aL, 0x1269a46804bfb92bL);
  private final List<EnumerationDescriptor.MemberDescriptor> myMembers = new EnumerationDescriptorBase.MembersList(myIndex, myMember_Entry_0, myMember_Exit_0);

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return null;
  }

  @NotNull
  @Override
  public List<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return myMembers;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String memberName) {
    if (memberName == null) {
      return null;
    }
    switch (memberName) {
      case "Entry":
        return myMember_Entry_0;
      case "Exit":
        return myMember_Exit_0;
    }
    return null;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(long idValue) {
    int index = myIndex.index(idValue);
    if (index == -1) {
      return null;
    }
    return myMembers.get(index);
  }
}
